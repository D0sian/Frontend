// Задача 1
// Цель задания
// Научиться работать с функциями, с их аргументами и оператором return.

// Что нужно сделать
// Создайте функцию с названием getAge(), которая будет рассчитывать возраст по году рождения. У функции будет всего один аргумент (параметр), который нужно передать в функцию. Функция должна сделать расчёт возраста по текущему году. После расчёта функция должна вернуть результат с помощью команды return.

// Созданную функцию нужно вызвать, передав ей дату рождения. Результат, который вернёт функция, необходимо вывести в консоль.

// Проверка результата
// Для проверки подставляйте параметр года рождения в функцию getAge(). Допустим, текущий год — 2022. Функция должна вернуть следующий результат, который отобразится с помощью console.log:

// getAge(1998) — функция вернёт 24;
// getAge(1991) — функция вернёт 31;
// getAge(2007) — функция вернёт 15.
function checkAge(getAge) {
    const thisYear = new Date().getFullYear();
    let age = (`Вам ${thisYear - getAge} лет`);
    return console.log(age);
  }
  checkAge(1992g)

  // Задача 2
  // Цели задания
  // Попрактиковаться в использовании функций.
  // Получить дополнительный опыт в работе с массивами.
  // Что нужно сделать
  // Напишите функцию filter(), которая создаёт массив email-адресов, не попавших в чёрный список. В качестве аргументов функция должна принимать два массива: массив строк с исходными email-адресами и массив строк с email-адресами в чёрном списке.

  // Пример вызова функции с параметрами:

  // // Массив с почтовыми адресами:
  // let whiteList = ['my-email@gmail.ru', 'jsfunc@mail.ru', 'annavkmail@vk.ru', 'fullname@skill.ru', 'goodday@day.ru']
  // // Массив с почтовыми адресами в чёрном списке:
  // let blackList = ['jsfunc@mail.ru','goodday@day.ru']
  // // Вызов созданной функции:
  // let result = filter(whiteList, blackList)

  // Выведите результат выполнения функции в консоль в виде массива:

  // ['my-email@gmail.ru', 'annavkmail@vk.ru', 'fullname@skill.ru'].
  // Проверка результата
  // Функция должна вернуть новый массив, в котором содержатся только те адреса, которых нет в массиве чёрного списка.
//   let whiteList = ['my-email@gmail.ru', 'jsfunc@mail.ru', 'annavkmail@vk.ru', 'fullname@skill.ru', 'goodday@day.ru']

//   let blackList = ['jsfunc@mail.ru', 'goodday@day.ru']

//   const getValidEmails = () => {
//     return whiteList.filter((mail) => !blackList.includes(mail));
//   };

//   console.log(getValidEmails());


  // Задача 3
  // Цель задания
  // Закрепить полученные знания и опыт в работе с функциями и научиться сортировать массив.

  // Что нужно сделать
  // Создайте функцию arrSort(), аргументом (параметром) которой будет массив. Задача функции — сделать сортировку элементов переданного массива по возрастанию. Функция должна вернуть отсортированный массив, а результат выполнения функции должен быть выведен в консоль с помощью console.log.

  // Проверка результата
  // При вызове функции arrSort() с переданным массивом функция должна вернуть отсортированный массив по возрастанию.

  // Например:

  // arrSort([2,5,1,3,4]) — функция вернёт массив [1,2,3,4,5];
  // arrSort([12,33,3,44,100]) — функция вернёт массив [3,12,33,44,100];
  // arrSort([0,1]) — функция вернёт массив [0,1].


//   let arr = [12, 33, 3, 44, 100];

//   for (let i = 0; i < arr.length; i++) {
//     for (let j = 0; j < arr.length - 1; j++) {
//       console.log('A:', arr[j]);
//       console.log('B:', arr[j + 1]);
//       if (arr[j] > arr[j + 1]) {
//         let temp = arr[j]
//         arr[j] = arr[j + 1]
//         arr[j + 1] = temp
//       }
//     }
//   }
//   console.log(arr);
